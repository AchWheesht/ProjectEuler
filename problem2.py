# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
import timer_module
import time

def sum_fibionacci():
    count_previous = 0
    count = 1
    total = 0
    while count < 4000000:
        if count % 2 == 0: total += count
        count += count_previous
        count_previous = count - count_previous
    return total

# def sum_with_list():
#     fib_list = [1, 1]
#     while fib_list[-1] < 4000000:
#         fib_list.append(fib_list[-1] + fib_list[-2])
#     del fib_list[-1]
#     print(fib_list)
#     return sum(fib_list)

timedit = timer_module.timer(sum_fibionacci)
# listit = timer_module.timer(sum_with_list)

print("Sum of Fibionacci numbers up to 4 million is %d. Took %.10f seconds." % (timedit[1], timedit[0]))
# print("Sum of Fibionacci numbers up to 4 million is %d. Took %.10f seconds." % (listit[1], listit[0]))
